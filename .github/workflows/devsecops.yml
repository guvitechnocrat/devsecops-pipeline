name: DevSecOps CI/CD

on: [push]

jobs:
  build-test-scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      # üîç SAST: SonarQube
      - name: SonarQube Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          curl -sSLo sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.7.0.2747-linux.zip
          unzip sonar-scanner.zip
          ./sonar-scanner-*/bin/sonar-scanner \
            -Dsonar.projectKey=devsecops-pipeline \
            -Dsonar.sources=. \
            -Dsonar.host.url=https://sonarqube.example.com \
            -Dsonar.login=$SONAR_TOKEN

      # üîê SCA: Snyk
      - name: Snyk Scan
        uses: snyk/actions@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: monitor

      # üê≥ Build Docker Image
      - name: Build Docker image
        run: docker build -t devsecops-app .

      # üõ°Ô∏è Container Scan: Trivy
      - name: Trivy Scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'devsecops-app'
          format: 'table'

  # üåê DAST (ZAP) - separate job
  zap_scan:
    runs-on: ubuntu-latest
    needs: build-test-scan

    steps:
      - name: ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.10.0
        with:
          target: 'http://localhost.com'  
